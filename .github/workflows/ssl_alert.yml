name: GCP Gateway Certificate Expiration Check and Send Slack Alerts

on:
  workflow_dispatch:  # Allows manual trigger

jobs:
  GCP-Gateway-Certificate-Expiration-Check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [stage, prod]
        include:
          - environment: stage
            GCP_GATEWAY_CERTIFICATE_NAME: "stage-gateway"
            GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID_STAGE }}
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_STAGE }}
            GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_STAGE }}
          - environment: prod
            GCP_GATEWAY_CERTIFICATE_NAME: "gateway-certs"
            GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID_PROD }}
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_PROD }}
            GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_STAGE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Ensure Secrets Are Available
        run: |
          echo "Checking secrets for ${{ matrix.environment }} environment..."
          if [ -z "${{ matrix.GCP_SERVICE_ACCOUNT_KEY }}" ]; then
            echo "Error: Missing GCP service account key for ${{ matrix.environment }} environment."
            exit 1
          fi

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ matrix.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ matrix.GCP_PROJECT_ID }}
      
      - name: Validate GCP Auth
        run: |
          gcloud auth list
          gcloud config get-value project

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Authenticate kubectl
        run: |
          gcloud config set project ${{ matrix.GCP_PROJECT_ID }}
          gcloud container clusters get-credentials venu-${{ matrix.environment }}-k8s-01 --zone=us-east4 --project ${{ matrix.GCP_PROJECT_ID }}

      - name: Check GCP Gateway Certificate Expiry
        run: |
          certificate_name="${{ matrix.GCP_GATEWAY_CERTIFICATE_NAME }}"
          project_id="${{ matrix.GCP_PROJECT_ID }}"
          
          # Fetch expiry and DNS names for the certificate
          expiry_date=$(gcloud compute ssl-certificates describe "$certificate_name" --global --format="value(expireTime)")
          dns=$(gcloud compute ssl-certificates describe "$certificate_name" --global --format="value(subjectAlternativeNames)")

          expiry_date_epoch=$(date -d "$expiry_date" +%s)
          current_date_epoch=$(date +%s)
          days_until_expiry=$(( (expiry_date_epoch - current_date_epoch) / 86400 ))

          expiry_threshold=300
          
          if [[ $days_until_expiry -le $expiry_threshold ]]; then
            echo "*Certificate Name*: $certificate_name" > certificate_expiry_alert_${{ matrix.environment }}.txt
            echo "*DNS Names*: $dns" >> certificate_expiry_alert_${{ matrix.environment }}.txt
            echo "*Expiry Date*: $expiry_date" >> certificate_expiry_alert_${{ matrix.environment }}.txt
            echo "*Days Until Expiry*: $days_until_expiry" >> certificate_expiry_alert_${{ matrix.environment }}.txt
          fi

      - name: Send Slack Alert
        run: |
          if [ -f certificate_expiry_alert_${{ matrix.environment }}.txt ]; then
            message=$(cat certificate_expiry_alert_${{ matrix.environment }}.txt)
            curl -X POST -H 'Content-type: application/json' --data "{
              'text': 'GCP_GATEWAY_CERTIFICATE_EXPIRY_ALERT (${{ matrix.environment }}):\n\n$message'
            }" "${{ matrix.SLACK_WEBHOOK_URL }}"
          fi
