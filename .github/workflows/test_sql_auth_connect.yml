name: Fetch SQL Auth Proxy Versions

on:
  schedule:
    - cron: "0 0 * * *"  # Runs daily at midnight, adjust as needed
  workflow_dispatch:

jobs:
  fetch-versions:
    runs-on: ubuntu-latest

    env:
      GCP_PROJECT_ID_PROD: ${{ secrets.GCP_PROJECT_ID_PROD }}
      GCP_PROJECT_ID_STAGE: ${{ secrets.GCP_PROJECT_ID_STAGE }}
      GCP_SA_KEY_PROD: ${{ secrets.GCP_SA_KEY_PROD }}
      GCP_SA_KEY_STAGE: ${{ secrets.GCP_SA_KEY_STAGE }}
      SLACK_WEBHOOK_URL_PROD: ${{ secrets.SLACK_WEBHOOK_URL_PROD }}
      SLACK_WEBHOOK_URL_STAGE: ${{ secrets.SLACK_WEBHOOK_URL_STAGE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Authenticate with Google Cloud using the service account key
      - name: Set up Google Cloud SDK for PROD
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_PROD }}

      - name: Configure gcloud for PROD project
        run: |
          gcloud config set project $GCP_PROJECT_ID_PROD
          gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY_PROD }}

      - name: Fetch instance templates in PROD
        run: |
          echo "Fetching instance templates for PROD..."
          gcloud compute instance-templates list --format=json > prod_instance_templates.json

      - name: Extract version info from PROD templates
        run: |
          echo "Extracting version information..."
          cat prod_instance_templates.json | jq '.[] | {name: .name, version: .properties.metadata.items[] | select(.key=="cloud-sql-auth-proxy-version") | .value}' > prod_versions.json
          cat prod_versions.json

      - name: Post to Slack (PROD)
        if: success()
        run: |
          echo "Posting version info to Slack..."
          curl -X POST -H 'Content-type: application/json' --data "$(jq -n --argjson data "$(cat prod_versions.json)" '{text: "Cloud SQL Auth Proxy Version Info for PROD: \($data)"}')" $SLACK_WEBHOOK_URL_PROD

      - name: Set up Google Cloud SDK for STAGE
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_STAGE }}

      - name: Configure gcloud for STAGE project
        run: |
          gcloud config set project $GCP_PROJECT_ID_STAGE
          gcloud auth activate-service-account --key-file=${{ secrets.GCP_SA_KEY_STAGE }}

      - name: Fetch instance templates in STAGE
        run: |
          echo "Fetching instance templates for STAGE..."
          gcloud compute instance-templates list --format=json > stage_instance_templates.json

      - name: Extract version info from STAGE templates
        run: |
          echo "Extracting version information..."
          cat stage_instance_templates.json | jq '.[] | {name: .name, version: .properties.metadata.items[] | select(.key=="cloud-sql-auth-proxy-version") | .value}' > stage_versions.json
          cat stage_versions.json

      - name: Post to Slack (STAGE)
        if: success()
        run: |
          echo "Posting version info to Slack..."
          curl -X POST -H 'Content-type: application/json' --data "$(jq -n --argjson data "$(cat stage_versions.json)" '{text: "Cloud SQL Auth Proxy Version Info for STAGE: \($data)"}')" $SLACK_WEBHOOK_URL_STAGE
