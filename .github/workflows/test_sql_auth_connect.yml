name: GCP SQL Auth Proxy Version Check and Slack Alerts

on:
  schedule:
    - cron: '0 12 * * 1'  # Runs every Monday at 12:00 PM UTC
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  GCP-SQL-Auth-Proxy-Version-Check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [prod]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set environment variables for prod
        run: |
          echo "Setting environment variables for prod..."
          echo "SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL_PROD }}" >> $GITHUB_ENV
          echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID_PROD }}" >> $GITHUB_ENV
      
      - name: Google Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_PROD_PLAIN }}

      - name: Setup Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Fetch Active SQL Auth Proxy Instance Groups
        id: fetch_instance_groups
        run: |
          gcloud compute instance-groups managed list --filter="name:(*sql auth proxy*)" --format="value(name)" --project="${{ env.GCP_PROJECT_ID }}" > instance_groups.txt
          if [ ! -s instance_groups.txt ]; then
            echo "No SQL Auth Proxy instance groups found."
            exit 1
          fi
          cat instance_groups.txt

      - name: Fetch SQL Auth Proxy Version
        run: |
          while read instance_group; do
            # Get the location (region or zone) of the instance group
            location=$(gcloud compute instance-groups managed list --filter="name=$instance_group" --format="value(location)" --project="${{ env.GCP_PROJECT_ID }}")

            # Describe the instance group with the correct region or zone
            instance_template=$(gcloud compute instance-groups managed describe "$instance_group" --region="$location" --format="value(instanceTemplate)" --project="${{ env.GCP_PROJECT_ID }}")
            
            # Fetch the SQL Auth Proxy version from the instance template
            version=$(gcloud compute instance-templates describe "$instance_template" --format="get(properties.metadata.items)" | grep -oP 'cloud-sql-proxy/v\K[0-9]+\.[0-9]+\.[0-9]+')

            # Write the information to a file for Slack notification
            echo "*Instance Group*: $instance_group" > proxy_version_${{ matrix.environment }}.txt
            echo "*Version*: $version" >> proxy_version_${{ matrix.environment }}.txt
          done < instance_groups.txt


      - name: Compare and Check for SQL Auth Proxy Version Updates
        run: |
          latest_version=$(curl --silent "https://api.github.com/repos/GoogleCloudPlatform/cloud-sql-proxy/releases/latest" | jq -r .tag_name | sed 's/^v//')
          current_version=$(grep -oP 'Version: \K[0-9]+\.[0-9]+\.[0-9]+' proxy_version_${{ matrix.environment }}.txt)
          
          if [[ "$latest_version" != "$current_version" ]]; then
            echo "*Latest Version*: $latest_version" >> proxy_version_${{ matrix.environment }}.txt
            echo "*Update Available*: Yes" >> proxy_version_${{ matrix.environment }}.txt
          else
            echo "SQL Auth Proxy is up to date." >> proxy_version_${{ matrix.environment }}.txt
          fi
          
      - name: Send Slack Alert
        run: |
          if [ -f proxy_version_${{ matrix.environment }}.txt ]; then
            message=$(cat proxy_version_${{ matrix.environment }}.txt)
            curl -X POST -H 'Content-type: application/json' --data "{
              'text': 'GCP SQL AUTH PROXY VERSION CHECK (${{ matrix.environment }}):\n\n$message'
            }" "${{ env.SLACK_WEBHOOK_URL }}"
          else
            echo "No alert to send for ${{ matrix.environment }}."
      
      # Send alert to Slack on job failure
      - name: Send alert to Slack on job failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            'text': 'GCP SQL AUTH PROXY VERSION CHECK:\n\nThe workflow for ${{ matrix.environment }} failed.'
          }" "${{ env.SLACK_WEBHOOK_URL }}"
